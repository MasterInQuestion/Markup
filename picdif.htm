<meta charset="UTF-8" />
<title>picdif - diff 2 pictures by overlaying</title>
<!-- Side by side without JavaScript -->
<meta name="viewport" content="initial-scale=1" />
<style>
	html { background-color: #7f7f7f; }
	body { display: inline-block; margin: 5em; }
/*
	img { width: 2048px; height: 2048px; }
	[id="0"] { background-color: #F00; }
	[id="1"] { background-color: #0F0; }
*/
</style>
<body onkeydown="return kbd_toggle( event );">
<!--
	Trick simulating "preventDefault": Broader browser compatibility.
	Must be specified so. (may not work merely specified in "onkeydown" function)

	"event" here is context-dependent multi-meaning. (don't change its name)
-->
	<img id="0" src="" onclick="toggle0();" />
	<img id="1" src="" onclick="toggle1();" />
<script>
	_0 = document.getElementById( "0" );
	_1 = document.getElementById( "1" );

	onload = function () {
	toggleTitle( _0 );
	_1.style.display = "none";
	};

	function toggle0 () {
	_0.style.display = "none";
	_1.style.display = "inline";
	toggleTitle( _1 );
	};

	function toggle1 () {
	_1.style.display = "none";
	_0.style.display = "inline";
	toggleTitle( _0 );
	};

	function toggleTitle ( x ) {
	document.title = "#" + x.id + " " +
	decodeURIComponent( x.src.match( /(?:\/|^)([^\/]*)\/*$/ )[1] );
//	location.replace( location.href.replace( /(?:#.*)?$/, "#" + x.id ) );
// ^ May cause unwanted viewport jump.
	};

	function kbd_toggle ( e ) {
	if (
	e.keyCode === 0x20 ||
	e.which === 0x20 /* 【Space】 */
	) {
	_1.style.display === "none" ?
	toggle0() : toggle1();
	return false;
	};
	return true;
	};
</script>
<!--

	At the moment browsers have limited support for programmatic interoperation with zoom.
	Hacky workaround is indeed possible. Yet reluctant to bother.

-->
